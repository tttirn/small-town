{"version":3,"file":"firebase-messaging-compat.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/util/src/environment.ts","../../packages/util/src/errors.ts","../../packages/util/src/compat.ts","../../packages/component/src/component.ts","../../node_modules/idb/lib/idb.mjs","../installations-exp/src/util/constants.ts","../installations-exp/src/util/errors.ts","../installations-exp/src/functions/common.ts","../installations-exp/src/util/sleep.ts","../installations-exp/src/helpers/generate-fid.ts","../installations-exp/src/helpers/buffer-to-base64-url-safe.ts","../installations-exp/src/util/get-key.ts","../installations-exp/src/helpers/fid-changed.ts","../installations-exp/src/helpers/idb-manager.ts","../installations-exp/src/helpers/get-installation-entry.ts","../installations-exp/src/functions/create-installation-request.ts","../installations-exp/src/functions/generate-auth-token-request.ts","../installations-exp/src/helpers/refresh-auth-token.ts","../installations-exp/src/api/get-token.ts","../installations-exp/src/helpers/extract-app-config.ts","../installations-exp/src/functions/config.ts","../installations-exp/src/api/get-id.ts","../installations-exp/src/index.ts","../messaging-exp/src/util/errors.ts","../messaging-exp/src/util/constants.ts","../messaging-exp/src/interfaces/internal-message-payload.ts","../messaging-exp/src/helpers/array-base64-translator.ts","../messaging-exp/src/helpers/migrate-old-database.ts","../messaging-exp/src/internals/idb-manager.ts","../messaging-exp/src/internals/requests.ts","../messaging-exp/src/internals/token-manager.ts","../messaging-exp/src/helpers/externalizePayload.ts","../messaging-exp/src/helpers/extract-app-config.ts","../messaging-exp/src/messaging-service.ts","../messaging-exp/src/helpers/logToScion.ts","../messaging-exp/src/listeners/window-listener.ts","../messaging-exp/src/helpers/is-console-message.ts","../messaging-exp/src/helpers/register.ts","../messaging-exp/src/api/isSupported.ts","../messaging-exp/src/helpers/registerDefaultSw.ts","../messaging-exp/src/api/getToken.ts","../messaging-exp/src/helpers/updateVapidKey.ts","../messaging-exp/src/helpers/updateSwReg.ts","../messaging-exp/src/api.ts","../messaging-exp/src/api/deleteToken.ts","../messaging-exp/src/api/onMessage.ts","../messaging-exp/src/listeners/sw-listeners.ts","../messaging-exp/src/helpers/sleep.ts","../messaging-exp/src/api/onBackgroundMessage.ts","../messaging-compat/src/messaging-compat.ts","../messaging-compat/src/registerMessagingCompat.ts","../messaging-compat/src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return 'indexedDB' in self && indexedDB != null;\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (!navigator || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.complete;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.complete;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\nimport { FirebaseInstallations } from '../interfaces/public-types';\n\n/**\n * Returns an Installation auth token, identifying the current Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: FirebaseInstallations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-exp';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app-exp';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations-exp';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-exp-internal';\n\nconst publicFactory: InstanceFactory<'installations-exp'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app-exp').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const platformLoggerProvider = _getProvider(app, 'platform-logger');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    platformLoggerProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-exp-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app-exp').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { FirebaseInstallations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(\n  installations: FirebaseInstallations\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app-exp';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-exp';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-exp';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { isSwSupported, isWindowSupported } from '../api/isSupported';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent } from '@firebase/app-exp';\nimport { messageEventListener } from '../listeners/window-listener';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging-exp'> = (\n  container: ComponentContainer\n) => {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported()\n    .then(isSupported => {\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    })\n    .catch(_ => {\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    });\n\n  const messaging = new MessagingService(\n    container.getProvider('app-exp').getImmediate(),\n    container.getProvider('installations-exp-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging-exp'> = (\n  container: ComponentContainer\n) => {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported()\n    .then(isSupported => {\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    })\n    .catch(_ => {\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    });\n\n  const messaging = new MessagingService(\n    container.getProvider('app-exp').getImmediate(),\n    container.getProvider('installations-exp-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging-exp', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw-exp', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateIndexedDBOpenable } from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    (await validateIndexedDBOpenable()) &&\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    (await validateIndexedDBOpenable()) &&\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: e.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app-exp';\nimport {\n  FirebaseMessaging,\n  GetTokenOptions,\n  MessagePayload\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(\n  app: FirebaseApp = getApp()\n): FirebaseMessaging {\n  return _getProvider(getModularInstance(app), 'messaging-exp').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(\n  app: FirebaseApp = getApp()\n): FirebaseMessaging {\n  return _getProvider(\n    getModularInstance(app),\n    'messaging-sw-exp'\n  ).getImmediate();\n}\n\n/**\n * Subscribes the `FirebaseMessaging` instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that `FirebaseMessaging`\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: FirebaseMessaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this `FirebaseMessaging` instance and unsubscribes\n * the `FirebaseMessaging` instance from the push subscription.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: FirebaseMessaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: FirebaseMessaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: FirebaseMessaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, FCM_MSG } from '../util/constants';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport {\n  NotificationEvent,\n  PushEvent,\n  PushSubscriptionChangeEvent,\n  ServiceWorkerGlobalScope,\n  WindowClient\n} from '../util/sw-types';\nimport {\n  deleteTokenInternal,\n  getTokenInternal\n} from '../internals/token-manager';\n\nimport { MessagingService } from '../messaging-service';\nimport { dbGet } from '../internals/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport async function onSubChange(\n  event: PushSubscriptionChangeEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const { newSubscription } = event;\n  if (!newSubscription) {\n    // Subscription revoked, delete token\n    await deleteTokenInternal(messaging);\n    return;\n  }\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  await deleteTokenInternal(messaging);\n\n  messaging.vapidKey =\n    tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n  await getTokenInternal(messaging);\n}\n\nexport async function onPush(\n  event: PushEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const internalPayload = getMessagePayloadInternal(event);\n  if (!internalPayload) {\n    // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\n    return;\n  }\n\n  // foreground handling: eventually passed to onMessage hook\n  const clientList = await getClientList();\n  if (hasVisibleClients(clientList)) {\n    return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n  }\n\n  // background handling: display if possible and pass to onBackgroundMessage hook\n  if (!!internalPayload.notification) {\n    await showNotification(wrapInternalPayload(internalPayload));\n  }\n\n  if (!messaging) {\n    return;\n  }\n\n  if (!!messaging.onBackgroundMessageHandler) {\n    const payload = externalizePayload(internalPayload);\n\n    if (typeof messaging.onBackgroundMessageHandler === 'function') {\n      messaging.onBackgroundMessageHandler(payload);\n    } else {\n      messaging.onBackgroundMessageHandler.next(payload);\n    }\n  }\n}\n\nexport async function onNotificationClick(\n  event: NotificationEvent\n): Promise<void> {\n  const internalPayload: MessagePayloadInternal =\n    event.notification?.data?.[FCM_MSG];\n\n  if (!internalPayload) {\n    return;\n  } else if (event.action) {\n    // User clicked on an action button. This will allow developers to act on action button clicks\n    // by using a custom onNotificationClick listener that they define.\n    return;\n  }\n\n  // Prevent other listeners from receiving the event\n  event.stopImmediatePropagation();\n  event.notification.close();\n\n  // Note clicking on a notification with no link set will focus the Chrome's current tab.\n  const link = getLink(internalPayload);\n  if (!link) {\n    return;\n  }\n\n  // FM should only open/focus links from app's origin.\n  const url = new URL(link, self.location.href);\n  const originUrl = new URL(self.location.origin);\n\n  if (url.host !== originUrl.host) {\n    return;\n  }\n\n  let client = await getWindowClient(url);\n\n  if (!client) {\n    client = await self.clients.openWindow(link);\n\n    // Wait three seconds for the client to initialize and set up the message handler so that it\n    // can receive the message.\n    await sleep(3000);\n  } else {\n    client = await client.focus();\n  }\n\n  if (!client) {\n    // Window Client will not be returned if it's for a third party origin.\n    return;\n  }\n\n  internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n  internalPayload.isFirebaseMessaging = true;\n  return client.postMessage(internalPayload);\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...((internalPayload.notification as unknown) as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp as AppCompat,\n  _FirebaseService\n} from '@firebase/app-compat';\nimport {\n  FirebaseMessaging,\n  MessagePayload,\n  deleteToken,\n  getToken,\n  onMessage\n} from '@firebase/messaging-exp';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport { onBackgroundMessage } from '@firebase/messaging-exp/sw';\n\nexport interface MessagingCompat {\n  getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string>;\n\n  deleteToken(): Promise<boolean>;\n\n  onMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe;\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe;\n}\n\nexport function isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSwSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSwSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\nexport class MessagingCompatImpl implements MessagingCompat, _FirebaseService {\n  constructor(readonly app: AppCompat, readonly _delegate: FirebaseMessaging) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  async getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string> {\n    return getToken(this._delegate, options);\n  }\n\n  async deleteToken(): Promise<boolean> {\n    return deleteToken(this._delegate);\n  }\n\n  onMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    return onMessage(this._delegate, nextOrObserver);\n  }\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    return onBackgroundMessage(this._delegate, nextOrObserver);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\n\nimport { MessagingCompatImpl } from './messaging-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging-compat': MessagingCompatImpl;\n  }\n}\n\nconst messagingCompatFactory: InstanceFactory<'messaging-compat'> = (\n  container: ComponentContainer\n) => {\n  if (!!navigator) {\n    // in window\n    return new MessagingCompatImpl(\n      container.getProvider('app-compat').getImmediate(),\n      container.getProvider('messaging-exp').getImmediate()\n    );\n  } else {\n    // in sw\n    return new MessagingCompatImpl(\n      container.getProvider('app-compat').getImmediate(),\n      container.getProvider('messaging-sw-exp').getImmediate()\n    );\n  }\n};\n\nexport function registerMessagingCompat(): void {\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'messaging-compat',\n      messagingCompatFactory,\n      ComponentType.PUBLIC\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name, version } from '../package.json';\n\nimport firebase from '@firebase/app-compat';\nimport { registerMessagingCompat } from './registerMessagingCompat';\nimport { MessagingCompat } from './messaging-compat';\n\nregisterMessagingCompat();\nfirebase.registerVersion(name, version);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): MessagingCompat;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): MessagingCompat;\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","validateIndexedDBOpenable","Promise","resolve","reject","preExist_1","DB_CHECK_NAME_1","request_1","self","indexedDB","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","error","message","code","customData","_super","_this","FirebaseError","Error","captureStackTrace","ErrorFactory","create","TypeError","String","__","this","constructor","__extends","service","serviceName","errors","_i","data","fullCode","template","replaceTemplate","fullMessage","replace","PATTERN","_","key","value","getModularInstance","_delegate","name","instanceFactory","type","Component","mode","instantiationMode","multipleInstances","props","serviceProps","callback","onInstanceCreated","toArray","arr","slice","promisifyRequest","request","promisifyRequestCall","obj","method","args","apply","then","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","openDb","version","upgradeCallback","event","deleteDb","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","TOKEN_EXPIRATION_BUFFER","ERROR_FACTORY","missing-app-config-values","not-registered","installation-not-found","request-failed","app-offline","delete-pending-registration","isServerError","includes","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","Date","now","async","getErrorFromResponse","requestName","errorData","json","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","sleep","ms","setTimeout","VALID_FID_PATTERN","generateFid","fidByteArray","Uint8Array","crypto","msCrypto","getRandomValues","fid","array","btoa","fromCharCode","substr","encode","test","getKey","appName","appId","fidChangeCallbacks","Map","fidChanged","callFidChangeCallbacks","channel","broadcastChannel","BroadcastChannel","onmessage","e","getBroadcastChannel","postMessage","size","broadcastFidChange","callbacks","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDB","tx","oldValue","put","remove","delete","update","updateFn","newValue","getInstallationEntry","registrationPromise","installationEntry","oldEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","navigator","onLine","inProgressEntry","registrationTime","endpoint","body","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallationRequest","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","entry","updateInstallationRequest","generateAuthTokenRequest","platformLoggerProvider","getGenerateAuthTokenEndpoint","platformLogger","getImmediate","optional","getPlatformInfoString","installation","refreshAuthToken","installations","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","isAuthTokenValid","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","getToken","installationsImpl","completeInstallationRegistration","getMissingValueError","valueName","INSTALLATIONS_NAME","publicFactory","container","app","getProvider","options","configKeys","keyName","extractAppConfig","_getProvider","_delete","internalFactory","getId","catch","console","_registerComponent","only-available-in-window","only-available-in-sw","permission-default","permission-blocked","unsupported-browser","indexed-db-unsupported","failed-service-worker-registration","token-subscribe-failed","token-subscribe-no-token","token-unsubscribe-failed","token-update-failed","token-update-no-token","use-sw-after-get-token","invalid-sw-registration","invalid-bg-handler","invalid-vapid-key","use-vapid-key-after-get-token","DEFAULT_VAPID_KEY","CONSOLE_CAMPAIGN_ID","MessageType","arrayToBase64","uint8Array","base64ToArray","base64String","base64","repeat","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","upgradeDb","dbGet","firebaseDependencies","tokenDetails","oldTokenDetails","senderId","databases","map","objectStoreNames","contains","clear","oldDetails","auth","p256dh","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","checkTokenDetails","migrateOldDatabase","dbSet","requestDeleteToken","unsubscribeOptions","getEndpoint","responseData","errorInfo","err","x-goog-firebase-installations-auth","getBody","web","applicationPubKey","getTokenInternal","messaging","pushSubscription","swRegistration","subscription","pushManager","getSubscription","subscribe","userVisibleOnly","applicationServerKey","getPushSubscription","scope","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","isTokenValid","updatedToken","updateOptions","requestUpdateToken","updatedTokenDetails","deleteTokenInternal","updateToken","warn","getNewToken","dbRemove","unsubscribe","subscribeOptions","requestGetToken","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messagePayloadInternal","notification","title","image","propagateNotificationPayload","propagateDataPayload","fcmOptions","link","analyticsLabel","analytics_label","propagateFcmOptions","MessagingService","[object Object]","analyticsProvider","messagingSenderId","logToScion","messageType","eventType","NOTIFICATION_CLICKED","PUSH_RECEIVED","getEventType","logEvent","message_id","message_name","message_time","message_device_time","Math","floor","messageEventListener","isFirebaseMessaging","onMessageHandler","next","dataPayload","WindowMessagingFactory","window","cookieEnabled","ServiceWorkerRegistration","PushSubscription","isWindowSupported","isSupported","serviceWorker","addEventListener","registerDefaultSw","register","browserErrorMessage","Notification","permission","requestPermission","updateVapidKey","updateSwReg","serviceWorkerRegistration","deleteToken","_deleteToken","onMessage","nextOrObserver","_onMessage","FCM_MSG","onPush","getMessagePayloadInternal","clientList","getClientList","some","client","visibilityState","url","startsWith","hasVisibleClients","sendMessagePayloadInternalToWindows","notificationPayloadInternal","actions","maxActions","registration","showNotification","wrappedInternalPayload","wrapInternalPayload","onBackgroundMessageHandler","onNotificationClick","action","stopImmediatePropagation","click_action","location","origin","getLink","URL","href","originUrl","host","clientUrl","getWindowClient","focus","clients","openWindow","matchAll","includeUncontrolled","SwMessagingFactory","isSwSupported","waitUntil","newSubscription","onSubChange","onBackgroundMessage","document","_onBackgroundMessage","MessagingCompatImpl","_getToken","messagingCompatFactory","firebase","INTERNAL","registerComponent","registerVersion"],"mappings":"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"}